{
  "name": "ai-input-01",
  "type": "registry:component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "textarea"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { CornerRightUp, Mic } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useAutoResizeTextarea } from \"@/hooks/use-auto-resize-textarea\";\n\nexport default function AIInput_01() {\n  const { textAreaRef, adjustHeight } = useAutoResizeTextarea({\n    minHeight: 52,\n    maxHeight: 200,\n  });\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleReset = () => {\n    setInputValue(\"\");\n    adjustHeight();\n  };\n\n  return (\n    <div className=\"w-full py-4\">\n      <div className=\"relative max-w-xl w-full mx-auto\">\n        <Textarea\n          id=\"ai-input-01\"\n          placeholder=\"Type your message...\"\n          className={cn(\n            \"max-w-xl bg-black/5 dark:bg-white/5 rounded-3xl pl-6 pr-16\",\n            \"placeholder:text-black/50 dark:placeholder:text-white/50\",\n            \"border-none ring-black/20 dark:ring-white/20\",\n            \"text-black dark:text-white text-wrap\",\n            \"overflow-y-auto resize-none\",\n            \"focus-visible:ring-0 focus-visible:ring-offset-0\",\n            \"transition-[height] duration-100 ease-out\",\n            \"leading-[1.2] py-[16px]\",\n            \"min-h-[52px]\",\n            \"max-h-[200px]\"\n          )}\n          ref={textAreaRef}\n          value={inputValue}\n          onChange={(e) => {\n            setInputValue(e.target.value);\n            adjustHeight();\n          }}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\" && !e.shiftKey) {\n              e.preventDefault();\n              handleReset();\n            }\n          }}\n        />\n\n        <div\n          className={cn(\n            \"absolute top-1/2 -translate-y-1/2 rounded-xl bg-black/5 dark:bg-white/5 py-1 px-1 transition-all duration-200\",\n            inputValue ? \"right-10\" : \"right-3\"\n          )}\n        >\n          <Mic className=\"w-4 h-4 text-black/70 dark:text-white/70\" />\n        </div>\n        <button\n          onClick={handleReset}\n          type=\"button\"\n          className={cn(\n            \"absolute top-1/2 -translate-y-1/2 rounded-xl bg-black/5 dark:bg-white/5 py-1 px-1 transition-all duration-700\",\n            inputValue\n              ? \"block right-3 animate-slide-in cursor-pointer\"\n              : \"hidden\"\n          )}\n        >\n          <CornerRightUp className=\"w-4 h-4 text-black/70 dark:text-white/70 transition-opacity duration-700\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n",
      "path": "/components/portui/ai-input/ai-input-01.tsx",
      "target": "/components/portui/ai-input-01.tsx"
    },
    {
      "type": "registry:hook",
      "content": "import { useEffect, useCallback, useRef } from \"react\";\r\n\r\ninterface UseAutoResizeTextareaProps {\r\n  minHeight?: number;\r\n  maxHeight?: number;\r\n}\r\n\r\nexport function useAutoResizeTextarea({\r\n  minHeight = 40,\r\n  maxHeight,\r\n}: UseAutoResizeTextareaProps = {}) {\r\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\r\n\r\n  const adjustHeight = useCallback(() => {\r\n    const textarea = textAreaRef.current;\r\n    if (!textarea) return;\r\n    textarea.style.height = `${minHeight}px`;\r\n    const newHeight = Math.max(\r\n      minHeight,\r\n      Math.min(textarea.scrollHeight, maxHeight ?? Number.POSITIVE_INFINITY)\r\n    );\r\n    textarea.style.height = `${newHeight}px`;\r\n  }, [minHeight, maxHeight]);\r\n\r\n  useEffect(() => {\r\n    const textarea = textAreaRef.current;\r\n    if (textarea) {\r\n      adjustHeight();\r\n    }\r\n  }, [adjustHeight]);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => adjustHeight();\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, [adjustHeight]);\r\n\r\n  return { textAreaRef, adjustHeight };\r\n}\r\n",
      "path": "/hooks/use-auto-resize-textarea.ts",
      "target": "/hooks/use-auto-resize-textarea.ts"
    }
  ]
}